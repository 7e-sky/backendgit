security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: bcrypt
    providers:
#        in_memory: { memory: ~ }
         database:
             entity:
                 class: App\Entity\User
                 property: email


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
#        main:
#            anonymous: true
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            json_login:
                # Here authentication will happen ( token generation )
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                username_path: email
            guard:
                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
                    - App\Security\TokenAuthenticator
            user_checker: App\Security\UserEnableChecker
        currentUser:
            pattern:  ^/api/currentUser
            stateless: true
            anonymous: true


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#          - { path: ^/api/login, roles:  IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api,             roles:  IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ZONE: ROLE_COMMERCIAL
        ROLE_ADMIN: [ROLE_ZONE,ROLE_COMMERCIAL,ROLE_ACHETEUR,ROLE_FOURNISSEUR]
